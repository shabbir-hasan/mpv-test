# Publicly routed bridge link
WORLD=br0

# Advertised link type
INPUT_SPEED="150Mbit"
OUTPUT_SPEED="10Mbit"
LINKTYPE="mtu 1500"

# ------------- CUSTOM SERVICES -------------
# unlike FireHOL, only server ports are needed.
# all the services used but not defined here, are defined internally in FireQOS.

# VoIP ports
server_ts3_ports="udp/9987,25148"
server_mumble_ports="any/64738"

# IRC ports (including znc)
server_irc_ports="tcp/8935,6667,6697,9997"

# Torrent clients configured to listen to a fixed port range
server_mytorrent_ports="any/29000:29999"
server_torrent_ports="any/16384:65535"

# Common tor ports
server_tor_ports="tcp/9001,9030"

# Some custom ssh ports
server_ssh_ports="tcp/22,6022,8022"

# Game ports
server_hots_ports="any/1119,6113,1120,3724"
server_lol_ports="udp/5000:5500"
server_rocket_ports="udp/7000:9000"
server_steam_ports="udp/3478,4379,4380 udp/27000:27030 udp/50000:60000"

# VPN ports
server_vpn_ports="any/1194,1195"

# Misc ports
server_iperf_ports="tcp/5201"
server_ipfs_ports="tcp/4001"
server_xonotic_ports="udp/1337,26000"

# ------------- INTERFACES -------------

interface $WORLD world bidirectional $LINKTYPE input rate $INPUT_SPEED output rate $OUTPUT_SPEED

    ## Classes, in order of priority (for free bandwidth allocation)
    class voip output commit 512kbit pfifo
    class ntp
    class interactive prio keep input commit 20% output commit 10%
    class chat commit 5%
    class surfing input commit 50% output commit 10%
    class synacks commit 5%
    class default
    class transfer commit 5%
    class torrents prio keep
    class tor prio keep

    ## Matches, in order of priority (for proper classification)
    # Incoming connections
    server ssh class interactive
    server steam class interactive
    server mytorrent class torrents
    server iperf class surfing
    server ipfs class torrents
    server xonotic class interactive

    # Outgoing connections. Match easily classified services first
    client mumble class voip
    client ts3 class voip
    client dns class interactive
    client ntp class ntp
    client irc class chat
    client jabber class chat
    client rsync class transfer
    client tor class tor
    client vpn class torrents

    # Games
    client hots class interactive
    client lol class interactive
    client rocket class interactive
    client steam class interactive

    # Some extra rules for more ambiguous packets
    match icmp class interactive
    client torrent class torrents

    # For SSH, we need to distinguish between SCP and SSH
    client ssh tos maximize-throughput class transfer
    client ssh dscp cs1 class transfer
    client ssh class interactive

    # For HTTP/HTTPS, I also want to distinguish between bulks and
    # interactive as best as possible
    client surfing tos maximize-throughput class transfer
    client surfing dst 136.243.89.164 class transfer # 0x0.st
    client surfing class surfing

    # Weak attempt at respecting DSCP
    match dscp EF  class interactive
    match dscp CS2 class interactive
    match dscp CS4 class voip
    match tos minimize-delay class interactive
    match tos maximize-throughput class transfer

    # For still unclassified packets, categorize SYN/ACK separately,
    # rest goes into class default
    match tcp syn class synacks
    match tcp ack class synacks
    match all class default
